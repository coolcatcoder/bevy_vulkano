// Same as in `bevy_winit`
use bevy::{
    input::{
        keyboard::{KeyCode, KeyboardInput},
        mouse::MouseButton,
        touch::{ForceTouch, TouchInput, TouchPhase},
        ButtonState,
    },
    math::Vec2,
    prelude::Entity,
    window::{CursorIcon, WindowLevel},
};

pub fn convert_keyboard_input(
    keyboard_input: &winit::event::KeyboardInput,
    window: Entity,
) -> KeyboardInput {
    KeyboardInput {
        logical_key: todo!(),
        //scan_code: keyboard_input.scancode,
        state: convert_element_state(keyboard_input.state),
        key_code: todo!(), //keyboard_input.virtual_keycode.map(convert_virtual_key_code),
        window,
    }
}

pub fn convert_element_state(element_state: winit::event::ElementState) -> ButtonState {
    match element_state {
        winit::event::ElementState::Pressed => ButtonState::Pressed,
        winit::event::ElementState::Released => ButtonState::Released,
    }
}

pub fn convert_mouse_button(mouse_button: winit::event::MouseButton) -> MouseButton {
    match mouse_button {
        winit::event::MouseButton::Left => MouseButton::Left,
        winit::event::MouseButton::Right => MouseButton::Right,
        winit::event::MouseButton::Middle => MouseButton::Middle,
        winit::event::MouseButton::Other(val) => MouseButton::Other(val),
    }
}

pub fn convert_touch_input(
    touch_input: winit::event::Touch,
    location: winit::dpi::LogicalPosition<f64>,
) -> TouchInput {
    TouchInput {
        window: todo!(),
        phase: match touch_input.phase {
            winit::event::TouchPhase::Started => TouchPhase::Started,
            winit::event::TouchPhase::Moved => TouchPhase::Moved,
            winit::event::TouchPhase::Ended => TouchPhase::Ended,
            winit::event::TouchPhase::Cancelled => TouchPhase::Canceled,
        },
        position: Vec2::new(location.x as f32, location.y as f32),
        force: touch_input.force.map(|f| match f {
            winit::event::Force::Calibrated {
                force,
                max_possible_force,
                altitude_angle,
            } => ForceTouch::Calibrated {
                force,
                max_possible_force,
                altitude_angle,
            },
            winit::event::Force::Normalized(x) => ForceTouch::Normalized(x),
        }),
        id: touch_input.id,
    }
}

pub fn convert_virtual_key_code(virtual_key_code: winit::event::VirtualKeyCode) -> KeyCode {
    match virtual_key_code {
        winit::event::VirtualKeyCode::Key1 => KeyCode::Digit1,
        winit::event::VirtualKeyCode::Key2 => KeyCode::Digit2,
        winit::event::VirtualKeyCode::Key3 => KeyCode::Digit3,
        winit::event::VirtualKeyCode::Key4 => KeyCode::Digit4,
        winit::event::VirtualKeyCode::Key5 => KeyCode::Digit5,
        winit::event::VirtualKeyCode::Key6 => KeyCode::Digit6,
        winit::event::VirtualKeyCode::Key7 => KeyCode::Digit7,
        winit::event::VirtualKeyCode::Key8 => KeyCode::Digit8,
        winit::event::VirtualKeyCode::Key9 => KeyCode::Digit9,
        winit::event::VirtualKeyCode::Key0 => KeyCode::Digit0,
        winit::event::VirtualKeyCode::A => KeyCode::KeyA,
        winit::event::VirtualKeyCode::B => KeyCode::KeyB,
        winit::event::VirtualKeyCode::C => KeyCode::KeyC,
        winit::event::VirtualKeyCode::D => KeyCode::KeyD,
        winit::event::VirtualKeyCode::E => KeyCode::KeyE,
        winit::event::VirtualKeyCode::F => KeyCode::KeyF,
        winit::event::VirtualKeyCode::G => KeyCode::KeyG,
        winit::event::VirtualKeyCode::H => KeyCode::KeyH,
        winit::event::VirtualKeyCode::I => KeyCode::KeyI,
        winit::event::VirtualKeyCode::J => KeyCode::KeyJ,
        winit::event::VirtualKeyCode::K => KeyCode::KeyK,
        winit::event::VirtualKeyCode::L => KeyCode::KeyL,
        winit::event::VirtualKeyCode::M => KeyCode::KeyM,
        winit::event::VirtualKeyCode::N => KeyCode::KeyN,
        winit::event::VirtualKeyCode::O => KeyCode::KeyO,
        winit::event::VirtualKeyCode::P => KeyCode::KeyP,
        winit::event::VirtualKeyCode::Q => KeyCode::KeyQ,
        winit::event::VirtualKeyCode::R => KeyCode::KeyR,
        winit::event::VirtualKeyCode::S => KeyCode::KeyS,
        winit::event::VirtualKeyCode::T => KeyCode::KeyT,
        winit::event::VirtualKeyCode::U => KeyCode::KeyU,
        winit::event::VirtualKeyCode::V => KeyCode::KeyV,
        winit::event::VirtualKeyCode::W => KeyCode::KeyW,
        winit::event::VirtualKeyCode::X => KeyCode::KeyX,
        winit::event::VirtualKeyCode::Y => KeyCode::KeyY,
        winit::event::VirtualKeyCode::Z => KeyCode::KeyZ,
        winit::event::VirtualKeyCode::Escape => KeyCode::Escape,
        winit::event::VirtualKeyCode::F1 => KeyCode::F1,
        winit::event::VirtualKeyCode::F2 => KeyCode::F2,
        winit::event::VirtualKeyCode::F3 => KeyCode::F3,
        winit::event::VirtualKeyCode::F4 => KeyCode::F4,
        winit::event::VirtualKeyCode::F5 => KeyCode::F5,
        winit::event::VirtualKeyCode::F6 => KeyCode::F6,
        winit::event::VirtualKeyCode::F7 => KeyCode::F7,
        winit::event::VirtualKeyCode::F8 => KeyCode::F8,
        winit::event::VirtualKeyCode::F9 => KeyCode::F9,
        winit::event::VirtualKeyCode::F10 => KeyCode::F10,
        winit::event::VirtualKeyCode::F11 => KeyCode::F11,
        winit::event::VirtualKeyCode::F12 => KeyCode::F12,
        winit::event::VirtualKeyCode::F13 => KeyCode::F13,
        winit::event::VirtualKeyCode::F14 => KeyCode::F14,
        winit::event::VirtualKeyCode::F15 => KeyCode::F15,
        winit::event::VirtualKeyCode::F16 => KeyCode::F16,
        winit::event::VirtualKeyCode::F17 => KeyCode::F17,
        winit::event::VirtualKeyCode::F18 => KeyCode::F18,
        winit::event::VirtualKeyCode::F19 => KeyCode::F19,
        winit::event::VirtualKeyCode::F20 => KeyCode::F20,
        winit::event::VirtualKeyCode::F21 => KeyCode::F21,
        winit::event::VirtualKeyCode::F22 => KeyCode::F22,
        winit::event::VirtualKeyCode::F23 => KeyCode::F23,
        winit::event::VirtualKeyCode::F24 => KeyCode::F24,
        winit::event::VirtualKeyCode::Snapshot => KeyCode::PrintScreen,
        winit::event::VirtualKeyCode::Scroll => KeyCode::ScrollLock,
        winit::event::VirtualKeyCode::Pause => KeyCode::Pause,
        winit::event::VirtualKeyCode::Insert => KeyCode::Insert,
        winit::event::VirtualKeyCode::Home => KeyCode::Home,
        winit::event::VirtualKeyCode::Delete => KeyCode::Delete,
        winit::event::VirtualKeyCode::End => KeyCode::End,
        winit::event::VirtualKeyCode::PageDown => KeyCode::PageDown,
        winit::event::VirtualKeyCode::PageUp => KeyCode::PageUp,
        winit::event::VirtualKeyCode::Left => KeyCode::ArrowLeft,
        winit::event::VirtualKeyCode::Up => KeyCode::ArrowUp,
        winit::event::VirtualKeyCode::Right => KeyCode::ArrowRight,
        winit::event::VirtualKeyCode::Down => KeyCode::ArrowDown,
        winit::event::VirtualKeyCode::Back => KeyCode::Backspace,
        winit::event::VirtualKeyCode::Return => KeyCode::Enter,
        winit::event::VirtualKeyCode::Space => KeyCode::Space,
        winit::event::VirtualKeyCode::Compose => todo!(),
        winit::event::VirtualKeyCode::Caret => todo!(),
        winit::event::VirtualKeyCode::Numlock => KeyCode::NumLock,
        winit::event::VirtualKeyCode::Numpad0 => KeyCode::Numpad0,
        winit::event::VirtualKeyCode::Numpad1 => KeyCode::Numpad1,
        winit::event::VirtualKeyCode::Numpad2 => KeyCode::Numpad2,
        winit::event::VirtualKeyCode::Numpad3 => KeyCode::Numpad3,
        winit::event::VirtualKeyCode::Numpad4 => KeyCode::Numpad4,
        winit::event::VirtualKeyCode::Numpad5 => KeyCode::Numpad5,
        winit::event::VirtualKeyCode::Numpad6 => KeyCode::Numpad6,
        winit::event::VirtualKeyCode::Numpad7 => KeyCode::Numpad7,
        winit::event::VirtualKeyCode::Numpad8 => KeyCode::Numpad8,
        winit::event::VirtualKeyCode::Numpad9 => KeyCode::Numpad9,
        winit::event::VirtualKeyCode::AbntC1 => todo!(),
        winit::event::VirtualKeyCode::AbntC2 => todo!(),
        winit::event::VirtualKeyCode::NumpadAdd => KeyCode::NumpadAdd,
        winit::event::VirtualKeyCode::Apostrophe => todo!(),
        winit::event::VirtualKeyCode::Apps => todo!(),
        winit::event::VirtualKeyCode::Asterisk => todo!(),
        winit::event::VirtualKeyCode::Plus => KeyCode::NumpadAdd,
        winit::event::VirtualKeyCode::At => todo!(),
        winit::event::VirtualKeyCode::Ax => todo!(),
        winit::event::VirtualKeyCode::Backslash => KeyCode::Backslash,
        winit::event::VirtualKeyCode::Calculator => todo!(),
        winit::event::VirtualKeyCode::Capital => todo!(),
        winit::event::VirtualKeyCode::Colon => KeyCode::Semicolon,
        winit::event::VirtualKeyCode::Comma => KeyCode::Comma,
        winit::event::VirtualKeyCode::Convert => KeyCode::Convert,
        winit::event::VirtualKeyCode::NumpadDecimal => KeyCode::NumpadDecimal,
        winit::event::VirtualKeyCode::NumpadDivide => KeyCode::NumpadDivide,
        winit::event::VirtualKeyCode::Equals => KeyCode::Equal,
        winit::event::VirtualKeyCode::Grave => todo!(),
        winit::event::VirtualKeyCode::Kana => todo!(),
        winit::event::VirtualKeyCode::Kanji => todo!(),
        winit::event::VirtualKeyCode::LAlt => KeyCode::AltLeft,
        winit::event::VirtualKeyCode::LBracket => KeyCode::BracketLeft,
        winit::event::VirtualKeyCode::LControl => KeyCode::ControlLeft,
        winit::event::VirtualKeyCode::LShift => KeyCode::ShiftLeft,
        winit::event::VirtualKeyCode::LWin => KeyCode::SuperLeft,
        winit::event::VirtualKeyCode::Mail => KeyCode::LaunchMail,
        winit::event::VirtualKeyCode::MediaSelect => KeyCode::MediaSelect,
        winit::event::VirtualKeyCode::MediaStop => KeyCode::MediaStop,
        winit::event::VirtualKeyCode::Minus => KeyCode::Minus,
        winit::event::VirtualKeyCode::NumpadMultiply => KeyCode::NumpadMultiply,
        winit::event::VirtualKeyCode::Mute => KeyCode::AudioVolumeMute,
        winit::event::VirtualKeyCode::MyComputer => todo!(),
        winit::event::VirtualKeyCode::NavigateForward => KeyCode::BrowserForward,
        winit::event::VirtualKeyCode::NavigateBackward => KeyCode::BrowserBack,
        winit::event::VirtualKeyCode::NextTrack => KeyCode::MediaTrackNext,
        winit::event::VirtualKeyCode::NoConvert => KeyCode::NonConvert,
        winit::event::VirtualKeyCode::NumpadComma => KeyCode::NumpadComma,
        winit::event::VirtualKeyCode::NumpadEnter => KeyCode::NumpadEnter,
        winit::event::VirtualKeyCode::NumpadEquals => KeyCode::NumpadEqual,
        winit::event::VirtualKeyCode::OEM102 => todo!(),
        winit::event::VirtualKeyCode::Period => KeyCode::Period,
        winit::event::VirtualKeyCode::PlayPause => KeyCode::MediaPlayPause,
        winit::event::VirtualKeyCode::Power => KeyCode::Power,
        winit::event::VirtualKeyCode::PrevTrack => KeyCode::MediaTrackPrevious,
        winit::event::VirtualKeyCode::RAlt => KeyCode::AltRight,
        winit::event::VirtualKeyCode::RBracket => KeyCode::BracketRight,
        winit::event::VirtualKeyCode::RControl => KeyCode::ControlRight,
        winit::event::VirtualKeyCode::RShift => KeyCode::ShiftRight,
        winit::event::VirtualKeyCode::RWin => KeyCode::SuperRight,
        winit::event::VirtualKeyCode::Semicolon => KeyCode::Semicolon,
        winit::event::VirtualKeyCode::Slash => KeyCode::Slash,
        winit::event::VirtualKeyCode::Sleep => KeyCode::Sleep,
        winit::event::VirtualKeyCode::Stop => KeyCode::MediaStop,
        winit::event::VirtualKeyCode::NumpadSubtract => KeyCode::NumpadSubtract,
        winit::event::VirtualKeyCode::Sysrq => todo!(),
        winit::event::VirtualKeyCode::Tab => KeyCode::Tab,
        winit::event::VirtualKeyCode::Underline => todo!(),
        winit::event::VirtualKeyCode::Unlabeled => todo!(),
        winit::event::VirtualKeyCode::VolumeDown => KeyCode::AudioVolumeDown,
        winit::event::VirtualKeyCode::VolumeUp => KeyCode::AudioVolumeUp,
        winit::event::VirtualKeyCode::Wake => KeyCode::WakeUp,
        winit::event::VirtualKeyCode::WebBack => KeyCode::BrowserBack,
        winit::event::VirtualKeyCode::WebFavorites => KeyCode::BrowserFavorites,
        winit::event::VirtualKeyCode::WebForward => KeyCode::BrowserForward,
        winit::event::VirtualKeyCode::WebHome => KeyCode::BrowserHome,
        winit::event::VirtualKeyCode::WebRefresh => KeyCode::BrowserRefresh,
        winit::event::VirtualKeyCode::WebSearch => KeyCode::BrowserSearch,
        winit::event::VirtualKeyCode::WebStop => KeyCode::BrowserStop,
        winit::event::VirtualKeyCode::Yen => KeyCode::IntlYen,
        winit::event::VirtualKeyCode::Copy => KeyCode::Copy,
        winit::event::VirtualKeyCode::Paste => KeyCode::Paste,
        winit::event::VirtualKeyCode::Cut => KeyCode::Cut,
    }
}

pub fn convert_cursor_icon(cursor_icon: CursorIcon) -> winit::window::CursorIcon {
    match cursor_icon {
        CursorIcon::Default => winit::window::CursorIcon::Default,
        CursorIcon::Crosshair => winit::window::CursorIcon::Crosshair,
        CursorIcon::Pointer => winit::window::CursorIcon::Hand,
        //CursorIcon::Arrow => winit::window::CursorIcon::Arrow,
        CursorIcon::Move => winit::window::CursorIcon::Move,
        CursorIcon::Text => winit::window::CursorIcon::Text,
        CursorIcon::Wait => winit::window::CursorIcon::Wait,
        CursorIcon::Help => winit::window::CursorIcon::Help,
        CursorIcon::Progress => winit::window::CursorIcon::Progress,
        CursorIcon::NotAllowed => winit::window::CursorIcon::NotAllowed,
        CursorIcon::ContextMenu => winit::window::CursorIcon::ContextMenu,
        CursorIcon::Cell => winit::window::CursorIcon::Cell,
        CursorIcon::VerticalText => winit::window::CursorIcon::VerticalText,
        CursorIcon::Alias => winit::window::CursorIcon::Alias,
        CursorIcon::Copy => winit::window::CursorIcon::Copy,
        CursorIcon::NoDrop => winit::window::CursorIcon::NoDrop,
        CursorIcon::Grab => winit::window::CursorIcon::Grab,
        CursorIcon::Grabbing => winit::window::CursorIcon::Grabbing,
        CursorIcon::AllScroll => winit::window::CursorIcon::AllScroll,
        CursorIcon::ZoomIn => winit::window::CursorIcon::ZoomIn,
        CursorIcon::ZoomOut => winit::window::CursorIcon::ZoomOut,
        CursorIcon::EResize => winit::window::CursorIcon::EResize,
        CursorIcon::NResize => winit::window::CursorIcon::NResize,
        CursorIcon::NeResize => winit::window::CursorIcon::NeResize,
        CursorIcon::NwResize => winit::window::CursorIcon::NwResize,
        CursorIcon::SResize => winit::window::CursorIcon::SResize,
        CursorIcon::SeResize => winit::window::CursorIcon::SeResize,
        CursorIcon::SwResize => winit::window::CursorIcon::SwResize,
        CursorIcon::WResize => winit::window::CursorIcon::WResize,
        CursorIcon::EwResize => winit::window::CursorIcon::EwResize,
        CursorIcon::NsResize => winit::window::CursorIcon::NsResize,
        CursorIcon::NeswResize => winit::window::CursorIcon::NeswResize,
        CursorIcon::NwseResize => winit::window::CursorIcon::NwseResize,
        CursorIcon::ColResize => winit::window::CursorIcon::ColResize,
        CursorIcon::RowResize => winit::window::CursorIcon::RowResize,
    }
}

pub fn convert_window_level(window_level: WindowLevel) -> winit::window::WindowLevel {
    match window_level {
        WindowLevel::AlwaysOnBottom => winit::window::WindowLevel::AlwaysOnBottom,
        WindowLevel::Normal => winit::window::WindowLevel::Normal,
        WindowLevel::AlwaysOnTop => winit::window::WindowLevel::AlwaysOnTop,
    }
}